[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "r-py-cheatsheet",
    "section": "",
    "text": "r_df_example &lt;- data.frame(id = letters[1:6],\nnumeric = 1:6)\nr_df_example\n\n  id numeric\n1  a       1\n2  b       2\n3  c       3\n4  d       4\n5  e       5\n6  f       6\n\n\n\n\n\n\nimport pandas as pd\npy_df_example = pd.DataFrame({'id': list('abcdef'),\n                 'numeric': list(range(1, 7))\n                })\n\npy_df_example\n\n  id  numeric\n0  a        1\n1  b        2\n2  c        3\n3  d        4\n4  e        5\n5  f        6\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(palmerpenguins)\n\nWarning: package 'palmerpenguins' was built under R version 4.4.1\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nr_df &lt;- penguins\n\n\n\n\n\nimport seaborn as sns\npy_df = sns.load_dataset('penguins')"
  },
  {
    "objectID": "index.html#create-a-dataframe",
    "href": "index.html#create-a-dataframe",
    "title": "r-py-cheatsheet",
    "section": "",
    "text": "r_df_example &lt;- data.frame(id = letters[1:6],\nnumeric = 1:6)\nr_df_example\n\n  id numeric\n1  a       1\n2  b       2\n3  c       3\n4  d       4\n5  e       5\n6  f       6\n\n\n\n\n\n\nimport pandas as pd\npy_df_example = pd.DataFrame({'id': list('abcdef'),\n                 'numeric': list(range(1, 7))\n                })\n\npy_df_example\n\n  id  numeric\n0  a        1\n1  b        2\n2  c        3\n3  d        4\n4  e        5\n5  f        6"
  },
  {
    "objectID": "index.html#palmers",
    "href": "index.html#palmers",
    "title": "r-py-cheatsheet",
    "section": "",
    "text": "library(palmerpenguins)\n\nWarning: package 'palmerpenguins' was built under R version 4.4.1\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nr_df &lt;- penguins\n\n\n\n\n\nimport seaborn as sns\npy_df = sns.load_dataset('penguins')"
  },
  {
    "objectID": "index.html#columns-names",
    "href": "index.html#columns-names",
    "title": "r-py-cheatsheet",
    "section": "Columns names",
    "text": "Columns names\n\n\n\nnames(r_df)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n\n\n\n\n\n\npy_df.columns\n\nIndex(['species', 'island', 'bill_length_mm', 'bill_depth_mm',\n       'flipper_length_mm', 'body_mass_g', 'sex'],\n      dtype='object')"
  },
  {
    "objectID": "index.html#dimensions",
    "href": "index.html#dimensions",
    "title": "r-py-cheatsheet",
    "section": "dimensions",
    "text": "dimensions\n\n\n\ndim(r_df)\n\n[1] 344   8\n\n\n\nnrow(r_df)\n\n[1] 344\n\n\n\nncol(r_df)\n\n[1] 8\n\n\n\n\n\n\npy_df.shape\n\n(344, 7)\n\n\n\npy_df.shape[0]\n\n344\n\n\n\npy_df.shape[1]\n\n7"
  },
  {
    "objectID": "index.html#head",
    "href": "index.html#head",
    "title": "r-py-cheatsheet",
    "section": "head",
    "text": "head\n\n\n\nr_df |&gt; head()\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\n\n\npy_df.head()\n\n  species     island  bill_length_mm  ...  flipper_length_mm  body_mass_g     sex\n0  Adelie  Torgersen            39.1  ...              181.0       3750.0    Male\n1  Adelie  Torgersen            39.5  ...              186.0       3800.0  Female\n2  Adelie  Torgersen            40.3  ...              195.0       3250.0  Female\n3  Adelie  Torgersen             NaN  ...                NaN          NaN     NaN\n4  Adelie  Torgersen            36.7  ...              193.0       3450.0  Female\n\n[5 rows x 7 columns]"
  },
  {
    "objectID": "index.html#table-tally",
    "href": "index.html#table-tally",
    "title": "r-py-cheatsheet",
    "section": "table | tally",
    "text": "table | tally\n\n\n\nr_df$species |&gt;  table()\n\n\n   Adelie Chinstrap    Gentoo \n      152        68       124 \n\n\n\nr_df |&gt;  group_by(species) |&gt;  tally()\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\n\n\n\n\npy_df['species'].value_counts()\n\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64"
  },
  {
    "objectID": "index.html#summary",
    "href": "index.html#summary",
    "title": "r-py-cheatsheet",
    "section": "summary",
    "text": "summary"
  },
  {
    "objectID": "index.html#structure-info",
    "href": "index.html#structure-info",
    "title": "r-py-cheatsheet",
    "section": "structure / info",
    "text": "structure / info\n\n\n\nr_df |&gt; str()\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ...\n\n\n\n\n\n\npy_df.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 7 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \ndtypes: float64(4), object(3)\nmemory usage: 18.9+ KB"
  },
  {
    "objectID": "index.html#filter",
    "href": "index.html#filter",
    "title": "r-py-cheatsheet",
    "section": "filter",
    "text": "filter\n\n\n\npenguins |&gt; \n  filter(species == \"Adelie\")\n\n# A tibble: 152 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 142 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nr_df[r_df$species == \"Adelie\",]\n\n# A tibble: 152 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 142 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\n\n\npy_df[py_df[\"species\"] == \"Adelie\"]\n\n    species     island  bill_length_mm  ...  flipper_length_mm  body_mass_g     sex\n0    Adelie  Torgersen            39.1  ...              181.0       3750.0    Male\n1    Adelie  Torgersen            39.5  ...              186.0       3800.0  Female\n2    Adelie  Torgersen            40.3  ...              195.0       3250.0  Female\n3    Adelie  Torgersen             NaN  ...                NaN          NaN     NaN\n4    Adelie  Torgersen            36.7  ...              193.0       3450.0  Female\n..      ...        ...             ...  ...                ...          ...     ...\n147  Adelie      Dream            36.6  ...              184.0       3475.0  Female\n148  Adelie      Dream            36.0  ...              195.0       3450.0  Female\n149  Adelie      Dream            37.8  ...              193.0       3750.0    Male\n150  Adelie      Dream            36.0  ...              187.0       3700.0  Female\n151  Adelie      Dream            41.5  ...              201.0       4000.0    Male\n\n[152 rows x 7 columns]"
  },
  {
    "objectID": "index.html#select",
    "href": "index.html#select",
    "title": "r-py-cheatsheet",
    "section": "select",
    "text": "select\n\n\n\nr_df$species\n\n  [1] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n  [8] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [15] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [22] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [29] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [36] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [43] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [50] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [57] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [64] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [71] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [78] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [85] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [92] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [99] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[106] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[113] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[120] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[127] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[134] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[141] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[148] Adelie    Adelie    Adelie    Adelie    Adelie    Gentoo    Gentoo   \n[155] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[162] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[169] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[176] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[183] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[190] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[197] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[204] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[211] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[218] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[225] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[232] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[239] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[246] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[253] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[260] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[267] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[274] Gentoo    Gentoo    Gentoo    Chinstrap Chinstrap Chinstrap Chinstrap\n[281] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[288] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[295] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[302] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[309] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[316] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[323] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[330] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[337] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[344] Chinstrap\nLevels: Adelie Chinstrap Gentoo\n\n\n\nr_df[[\"species\"]]\n\n  [1] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n  [8] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [15] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [22] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [29] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [36] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [43] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [50] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [57] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [64] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [71] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [78] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [85] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [92] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [99] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[106] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[113] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[120] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[127] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[134] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[141] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[148] Adelie    Adelie    Adelie    Adelie    Adelie    Gentoo    Gentoo   \n[155] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[162] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[169] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[176] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[183] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[190] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[197] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[204] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[211] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[218] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[225] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[232] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[239] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[246] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[253] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[260] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[267] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[274] Gentoo    Gentoo    Gentoo    Chinstrap Chinstrap Chinstrap Chinstrap\n[281] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[288] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[295] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[302] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[309] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[316] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[323] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[330] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[337] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[344] Chinstrap\nLevels: Adelie Chinstrap Gentoo\n\n\n\n\n\n\npy_df.species\n\n0      Adelie\n1      Adelie\n2      Adelie\n3      Adelie\n4      Adelie\n        ...  \n339    Gentoo\n340    Gentoo\n341    Gentoo\n342    Gentoo\n343    Gentoo\nName: species, Length: 344, dtype: object\n\n\n\npy_df[\"species\"]\n\n0      Adelie\n1      Adelie\n2      Adelie\n3      Adelie\n4      Adelie\n        ...  \n339    Gentoo\n340    Gentoo\n341    Gentoo\n342    Gentoo\n343    Gentoo\nName: species, Length: 344, dtype: object\n\n\n\npy_df.filter(\"species\")\n\nEmpty DataFrame\nColumns: []\nIndex: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]\n\n[344 rows x 0 columns]"
  },
  {
    "objectID": "index.html#filter-select",
    "href": "index.html#filter-select",
    "title": "r-py-cheatsheet",
    "section": "filter & select",
    "text": "filter & select\n\nr_df |&gt; \n  filter(species == \"Adelie\") |&gt; \n  select(\"bill_length_mm\")\n\n# A tibble: 152 × 1\n   bill_length_mm\n            &lt;dbl&gt;\n 1           39.1\n 2           39.5\n 3           40.3\n 4           NA  \n 5           36.7\n 6           39.3\n 7           38.9\n 8           39.2\n 9           34.1\n10           42  \n# ℹ 142 more rows\n\n\n\nr_df[r_df$species == \"Adelie\", \"bill_length_mm\"]\n\n# A tibble: 152 × 1\n   bill_length_mm\n            &lt;dbl&gt;\n 1           39.1\n 2           39.5\n 3           40.3\n 4           NA  \n 5           36.7\n 6           39.3\n 7           38.9\n 8           39.2\n 9           34.1\n10           42  \n# ℹ 142 more rows\n\n\n\npy_df.loc[py_df[\"species\"] == \"Adelie\", \"bill_length_mm\"] \n\n0      39.1\n1      39.5\n2      40.3\n3       NaN\n4      36.7\n       ... \n147    36.6\n148    36.0\n149    37.8\n150    36.0\n151    41.5\nName: bill_length_mm, Length: 152, dtype: float64"
  },
  {
    "objectID": "index.html#mutate",
    "href": "index.html#mutate",
    "title": "r-py-cheatsheet",
    "section": "mutate",
    "text": "mutate"
  },
  {
    "objectID": "index.html#summarise",
    "href": "index.html#summarise",
    "title": "r-py-cheatsheet",
    "section": "summarise",
    "text": "summarise\n\nr_df |&gt; \n  group_by(species) |&gt; \n  summarise(bill_length_mm = mean(bill_length_mm, na.rm = T))\n\n# A tibble: 3 × 2\n  species   bill_length_mm\n  &lt;fct&gt;              &lt;dbl&gt;\n1 Adelie              38.8\n2 Chinstrap           48.8\n3 Gentoo              47.5\n\n\n\npy_df.groupby('species')['bill_length_mm'].mean().reset_index()\n\n     species  bill_length_mm\n0     Adelie       38.791391\n1  Chinstrap       48.833824\n2     Gentoo       47.504878\n\n\n# # Mean dep_delay and arr_delay for each season\n# dadel_season = flights.groupby('season')['dep_delay', 'arr_delay'].mean().reset_index()\n# print(dadel_season)\n# \n# # Mean and std delays by origin\n# del_ori = flights.groupby('origin')['total_delay', 'dep_delay', 'arr_delay'].agg(['mean', 'std'])\n# print(del_ori)"
  }
]